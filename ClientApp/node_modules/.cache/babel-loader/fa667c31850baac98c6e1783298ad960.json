{"ast":null,"code":"import _regeneratorRuntime from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Component}from'react';import authService from'./AuthorizeService';import{AuthenticationResultStatus}from'./AuthorizeService';import{QueryParameterNames,LogoutActions,ApplicationPaths}from'./ApiAuthorizationConstants';// The main responsibility of this component is to handle the user's logout process.\n// This is the starting point for the logout process, which is usually initiated when a\n// user clicks on the logout button on the LoginMenu component.\nexport var Logout=/*#__PURE__*/function(_Component){_inherits(Logout,_Component);function Logout(props){var _this;_classCallCheck(this,Logout);_this=_possibleConstructorReturn(this,_getPrototypeOf(Logout).call(this,props));_this.state={message:undefined,isReady:false,authenticated:false};return _this;}_createClass(Logout,[{key:\"componentDidMount\",value:function componentDidMount(){var action=this.props.action;switch(action){case LogoutActions.Logout:if(!!window.history.state.state.local){this.logout(this.getReturnUrl());}else{// This prevents regular links to <app>/authentication/logout from triggering a logout\nthis.setState({isReady:true,message:\"The logout was not initiated from within the page.\"});}break;case LogoutActions.LogoutCallback:this.processLogoutCallback();break;case LogoutActions.LoggedOut:this.setState({isReady:true,message:\"You successfully logged out!\"});break;default:throw new Error(\"Invalid action '\".concat(action,\"'\"));}this.populateAuthenticationState();}},{key:\"render\",value:function render(){var _this$state=this.state,isReady=_this$state.isReady,message=_this$state.message;if(!isReady){return React.createElement(\"div\",null);}if(!!message){return React.createElement(\"div\",null,message);}else{var action=this.props.action;switch(action){case LogoutActions.Logout:return React.createElement(\"div\",null,\"Processing logout\");case LogoutActions.LogoutCallback:return React.createElement(\"div\",null,\"Processing logout callback\");case LogoutActions.LoggedOut:return React.createElement(\"div\",null,message);default:throw new Error(\"Invalid action '\".concat(action,\"'\"));}}}},{key:\"logout\",value:function logout(returnUrl){var state,isauthenticated,result;return _regeneratorRuntime.async(function logout$(_context){while(1){switch(_context.prev=_context.next){case 0:state={returnUrl:returnUrl};_context.next=3;return _regeneratorRuntime.awrap(authService.isAuthenticated());case 3:isauthenticated=_context.sent;if(!isauthenticated){_context.next=20;break;}_context.next=7;return _regeneratorRuntime.awrap(authService.signOut(state));case 7:result=_context.sent;_context.t0=result.status;_context.next=_context.t0===AuthenticationResultStatus.Redirect?11:_context.t0===AuthenticationResultStatus.Success?12:_context.t0===AuthenticationResultStatus.Fail?15:17;break;case 11:return _context.abrupt(\"break\",18);case 12:_context.next=14;return _regeneratorRuntime.awrap(this.navigateToReturnUrl(returnUrl));case 14:return _context.abrupt(\"break\",18);case 15:this.setState({message:result.message});return _context.abrupt(\"break\",18);case 17:throw new Error(\"Invalid authentication result status.\");case 18:_context.next=21;break;case 20:this.setState({message:\"You successfully logged out!\"});case 21:case\"end\":return _context.stop();}}},null,this);}},{key:\"processLogoutCallback\",value:function processLogoutCallback(){var url,result;return _regeneratorRuntime.async(function processLogoutCallback$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=window.location.href;_context2.next=3;return _regeneratorRuntime.awrap(authService.completeSignOut(url));case 3:result=_context2.sent;_context2.t0=result.status;_context2.next=_context2.t0===AuthenticationResultStatus.Redirect?7:_context2.t0===AuthenticationResultStatus.Success?8:_context2.t0===AuthenticationResultStatus.Fail?11:13;break;case 7:throw new Error('Should not redirect.');case 8:_context2.next=10;return _regeneratorRuntime.awrap(this.navigateToReturnUrl(this.getReturnUrl(result.state)));case 10:return _context2.abrupt(\"break\",14);case 11:this.setState({message:result.message});return _context2.abrupt(\"break\",14);case 13:throw new Error(\"Invalid authentication result status.\");case 14:case\"end\":return _context2.stop();}}},null,this);}},{key:\"populateAuthenticationState\",value:function populateAuthenticationState(){var authenticated;return _regeneratorRuntime.async(function populateAuthenticationState$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(authService.isAuthenticated());case 2:authenticated=_context3.sent;this.setState({isReady:true,authenticated:authenticated});case 4:case\"end\":return _context3.stop();}}},null,this);}},{key:\"getReturnUrl\",value:function getReturnUrl(state){var params=new URLSearchParams(window.location.search);var fromQuery=params.get(QueryParameterNames.ReturnUrl);if(fromQuery&&!fromQuery.startsWith(\"\".concat(window.location.origin,\"/\"))){// This is an extra check to prevent open redirects.\nthrow new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\");}return state&&state.returnUrl||fromQuery||\"\".concat(window.location.origin).concat(ApplicationPaths.LoggedOut);}},{key:\"navigateToReturnUrl\",value:function navigateToReturnUrl(returnUrl){return window.location.replace(returnUrl);}}]);return Logout;}(Component);","map":{"version":3,"sources":["/Users/skylarsmith/PermitToWorkEPF/ClientApp/src/components/api-authorization/Logout.js"],"names":["React","Component","authService","AuthenticationResultStatus","QueryParameterNames","LogoutActions","ApplicationPaths","Logout","props","state","message","undefined","isReady","authenticated","action","window","history","local","logout","getReturnUrl","setState","LogoutCallback","processLogoutCallback","LoggedOut","Error","populateAuthenticationState","returnUrl","isAuthenticated","isauthenticated","signOut","result","status","Redirect","Success","Fail","navigateToReturnUrl","url","location","href","completeSignOut","params","URLSearchParams","search","fromQuery","get","ReturnUrl","startsWith","origin","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Component } from 'react';\nimport authService from './AuthorizeService';\nimport { AuthenticationResultStatus } from './AuthorizeService';\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from './ApiAuthorizationConstants';\n\n// The main responsibility of this component is to handle the user's logout process.\n// This is the starting point for the logout process, which is usually initiated when a\n// user clicks on the logout button on the LoginMenu component.\nexport class Logout extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: undefined,\n            isReady: false,\n            authenticated: false\n        };\n    }\n\n    componentDidMount() {\n        const action = this.props.action;\n        switch (action) {\n            case LogoutActions.Logout:\n                if (!!window.history.state.state.local) {\n                    this.logout(this.getReturnUrl());\n                } else {\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\n                }\n                break;\n            case LogoutActions.LogoutCallback:\n                this.processLogoutCallback();\n                break;\n            case LogoutActions.LoggedOut:\n                this.setState({ isReady: true, message: \"You successfully logged out!\" });\n                break;\n            default:\n                throw new Error(`Invalid action '${action}'`);\n        }\n\n        this.populateAuthenticationState();\n    }\n\n    render() {\n        const { isReady, message } = this.state;\n        if (!isReady) {\n            return <div></div>\n        }\n        if (!!message) {\n            return (<div>{message}</div>);\n        } else {\n            const action = this.props.action;\n            switch (action) {\n                case LogoutActions.Logout:\n                    return (<div>Processing logout</div>);\n                case LogoutActions.LogoutCallback:\n                    return (<div>Processing logout callback</div>);\n                case LogoutActions.LoggedOut:\n                    return (<div>{message}</div>);\n                default:\n                    throw new Error(`Invalid action '${action}'`);\n            }\n        }\n    }\n\n    async logout(returnUrl) {\n        const state = { returnUrl };\n        const isauthenticated = await authService.isAuthenticated();\n        if (isauthenticated) {\n            const result = await authService.signOut(state);\n            switch (result.status) {\n                case AuthenticationResultStatus.Redirect:\n                    break;\n                case AuthenticationResultStatus.Success:\n                    await this.navigateToReturnUrl(returnUrl);\n                    break;\n                case AuthenticationResultStatus.Fail:\n                    this.setState({ message: result.message });\n                    break;\n                default:\n                    throw new Error(\"Invalid authentication result status.\");\n            }\n        } else {\n            this.setState({ message: \"You successfully logged out!\" });\n        }\n    }\n\n    async processLogoutCallback() {\n        const url = window.location.href;\n        const result = await authService.completeSignOut(url);\n        switch (result.status) {\n            case AuthenticationResultStatus.Redirect:\n                // There should not be any redirects as the only time completeAuthentication finishes\n                // is when we are doing a redirect sign in flow.\n                throw new Error('Should not redirect.');\n            case AuthenticationResultStatus.Success:\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n                break;\n            case AuthenticationResultStatus.Fail:\n                this.setState({ message: result.message });\n                break;\n            default:\n                throw new Error(\"Invalid authentication result status.\");\n        }\n    }\n\n    async populateAuthenticationState() {\n        const authenticated = await authService.isAuthenticated();\n        this.setState({ isReady: true, authenticated });\n    }\n\n    getReturnUrl(state) {\n        const params = new URLSearchParams(window.location.search);\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\n            // This is an extra check to prevent open redirects.\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\n        }\n        return (state && state.returnUrl) ||\n            fromQuery ||\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\n    }\n\n    navigateToReturnUrl(returnUrl) {\n        return window.location.replace(returnUrl);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}