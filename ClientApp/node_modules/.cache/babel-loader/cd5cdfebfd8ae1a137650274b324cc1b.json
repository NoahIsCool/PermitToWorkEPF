{"ast":null,"code":"import _regeneratorRuntime from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _slicedToArray from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component,Fragment}from'react';import{NavItem,NavLink}from'reactstrap';import{Link}from'react-router-dom';import authService from'./AuthorizeService';import{ApplicationPaths}from'./ApiAuthorizationConstants';export var LoginMenu=/*#__PURE__*/function(_Component){_inherits(LoginMenu,_Component);function LoginMenu(props){var _this;_classCallCheck(this,LoginMenu);_this=_possibleConstructorReturn(this,_getPrototypeOf(LoginMenu).call(this,props));_this.state={isAuthenticated:false,userName:null};return _this;}_createClass(LoginMenu,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this._subscription=authService.subscribe(function(){return _this2.populateState();});this.populateState();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){authService.unsubscribe(this._subscription);}},{key:\"populateState\",value:function populateState(){var _ref,_ref2,isAuthenticated,user;return _regeneratorRuntime.async(function populateState$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(Promise.all([authService.isAuthenticated(),authService.getUser()]));case 2:_ref=_context.sent;_ref2=_slicedToArray(_ref,2);isAuthenticated=_ref2[0];user=_ref2[1];this.setState({isAuthenticated:isAuthenticated,userName:user&&user.name});case 7:case\"end\":return _context.stop();}}},null,this);}},{key:\"render\",value:function render(){var _this$state=this.state,isAuthenticated=_this$state.isAuthenticated,userName=_this$state.userName;if(!isAuthenticated){var registerPath=\"\".concat(ApplicationPaths.Register);var loginPath=\"\".concat(ApplicationPaths.Login);return this.anonymousView(registerPath,loginPath);}else{var profilePath=\"\".concat(ApplicationPaths.Profile);var logoutPath={pathname:\"\".concat(ApplicationPaths.LogOut),state:{local:true}};return this.authenticatedView(userName,profilePath,logoutPath);}}},{key:\"authenticatedView\",value:function authenticatedView(userName,profilePath,logoutPath){return React.createElement(Fragment,null,React.createElement(NavItem,null,React.createElement(NavLink,{tag:Link,className:\"text-dark\",to:profilePath},\"Hello \",userName)),React.createElement(NavItem,null,React.createElement(NavLink,{tag:Link,className:\"text-dark\",to:logoutPath},\"Logout\")));}},{key:\"anonymousView\",value:function anonymousView(registerPath,loginPath){return React.createElement(Fragment,null,React.createElement(NavItem,null,React.createElement(NavLink,{tag:Link,className:\"text-dark\",to:registerPath},\"Register\")),React.createElement(NavItem,null,React.createElement(NavLink,{tag:Link,className:\"text-dark\",to:loginPath},\"Login\")));}}]);return LoginMenu;}(Component);","map":{"version":3,"sources":["/Users/skylarsmith/PermitToWorkEPF/ClientApp/src/components/api-authorization/LoginMenu.js"],"names":["React","Component","Fragment","NavItem","NavLink","Link","authService","ApplicationPaths","LoginMenu","props","state","isAuthenticated","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","getUser","user","setState","name","registerPath","Register","loginPath","Login","anonymousView","profilePath","Profile","logoutPath","pathname","LogOut","local","authenticatedView"],"mappings":"0nCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,YAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,MAAOC,CAAAA,WAAP,KAAwB,oBAAxB,CACA,OAASC,gBAAT,KAAiC,6BAAjC,CAEA,UAAaC,CAAAA,SAAb,mEACI,mBAAYC,KAAZ,CAAmB,2CACf,2EAAMA,KAAN,GAEA,MAAKC,KAAL,CAAa,CACTC,eAAe,CAAE,KADR,CAETC,QAAQ,CAAE,IAFD,CAAb,CAHe,aAOlB,CARL,mFAUwB,iBAChB,KAAKC,aAAL,CAAqBP,WAAW,CAACQ,SAAZ,CAAsB,iBAAM,CAAA,MAAI,CAACC,aAAL,EAAN,EAAtB,CAArB,CACA,KAAKA,aAAL,GACH,CAbL,mEAe2B,CACnBT,WAAW,CAACU,WAAZ,CAAwB,KAAKH,aAA7B,EACH,CAjBL,kQAoB8CI,OAAO,CAACC,GAAR,CAAY,CAACZ,WAAW,CAACK,eAAZ,EAAD,CAAgCL,WAAW,CAACa,OAAZ,EAAhC,CAAZ,CApB9C,yDAoBeR,eApBf,UAoBgCS,IApBhC,UAqBQ,KAAKC,QAAL,CAAc,CACVV,eAAe,CAAfA,eADU,CAEVC,QAAQ,CAAEQ,IAAI,EAAIA,IAAI,CAACE,IAFb,CAAd,EArBR,+FA2Ba,iBACiC,KAAKZ,KADtC,CACGC,eADH,aACGA,eADH,CACoBC,QADpB,aACoBA,QADpB,CAEL,GAAI,CAACD,eAAL,CAAsB,CAClB,GAAMY,CAAAA,YAAY,WAAMhB,gBAAgB,CAACiB,QAAvB,CAAlB,CACA,GAAMC,CAAAA,SAAS,WAAMlB,gBAAgB,CAACmB,KAAvB,CAAf,CACA,MAAO,MAAKC,aAAL,CAAmBJ,YAAnB,CAAiCE,SAAjC,CAAP,CACH,CAJD,IAIO,CACH,GAAMG,CAAAA,WAAW,WAAMrB,gBAAgB,CAACsB,OAAvB,CAAjB,CACA,GAAMC,CAAAA,UAAU,CAAG,CAAEC,QAAQ,WAAKxB,gBAAgB,CAACyB,MAAtB,CAAV,CAA0CtB,KAAK,CAAE,CAAEuB,KAAK,CAAE,IAAT,CAAjD,CAAnB,CACA,MAAO,MAAKC,iBAAL,CAAuBtB,QAAvB,CAAiCgB,WAAjC,CAA8CE,UAA9C,CAAP,CACH,CACJ,CAtCL,4DAwCsBlB,QAxCtB,CAwCgCgB,WAxChC,CAwC6CE,UAxC7C,CAwCyD,CACjD,MAAQ,qBAAC,QAAD,MACJ,oBAAC,OAAD,MACI,oBAAC,OAAD,EAAS,GAAG,CAAEzB,IAAd,CAAoB,SAAS,CAAC,WAA9B,CAA0C,EAAE,CAAEuB,WAA9C,WAAkEhB,QAAlE,CADJ,CADI,CAIJ,oBAAC,OAAD,MACI,oBAAC,OAAD,EAAS,GAAG,CAAEP,IAAd,CAAoB,SAAS,CAAC,WAA9B,CAA0C,EAAE,CAAEyB,UAA9C,WADJ,CAJI,CAAR,CASH,CAlDL,oDAoDkBP,YApDlB,CAoDgCE,SApDhC,CAoD2C,CACnC,MAAQ,qBAAC,QAAD,MACJ,oBAAC,OAAD,MACI,oBAAC,OAAD,EAAS,GAAG,CAAEpB,IAAd,CAAoB,SAAS,CAAC,WAA9B,CAA0C,EAAE,CAAEkB,YAA9C,aADJ,CADI,CAIJ,oBAAC,OAAD,MACI,oBAAC,OAAD,EAAS,GAAG,CAAElB,IAAd,CAAoB,SAAS,CAAC,WAA9B,CAA0C,EAAE,CAAEoB,SAA9C,UADJ,CAJI,CAAR,CAQH,CA7DL,uBAA+BxB,SAA/B","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { NavItem, NavLink } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport authService from './AuthorizeService';\nimport { ApplicationPaths } from './ApiAuthorizationConstants';\n\nexport class LoginMenu extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isAuthenticated: false,\n            userName: null\n        };\n    }\n\n    componentDidMount() {\n        this._subscription = authService.subscribe(() => this.populateState());\n        this.populateState();\n    }\n\n    componentWillUnmount() {\n        authService.unsubscribe(this._subscription);\n    }\n\n    async populateState() {\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\n        this.setState({\n            isAuthenticated,\n            userName: user && user.name\n        });\n    }\n\n    render() {\n        const { isAuthenticated, userName } = this.state;\n        if (!isAuthenticated) {\n            const registerPath = `${ApplicationPaths.Register}`;\n            const loginPath = `${ApplicationPaths.Login}`;\n            return this.anonymousView(registerPath, loginPath);\n        } else {\n            const profilePath = `${ApplicationPaths.Profile}`;\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\n            return this.authenticatedView(userName, profilePath, logoutPath);\n        }\n    }\n\n    authenticatedView(userName, profilePath, logoutPath) {\n        return (<Fragment>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={profilePath}>Hello {userName}</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>Logout</NavLink>\n            </NavItem>\n        </Fragment>);\n\n    }\n\n    anonymousView(registerPath, loginPath) {\n        return (<Fragment>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={registerPath}>Register</NavLink>\n            </NavItem>\n            <NavItem>\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>Login</NavLink>\n            </NavItem>\n        </Fragment>);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}