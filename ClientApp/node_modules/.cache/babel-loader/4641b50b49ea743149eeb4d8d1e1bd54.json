{"ast":null,"code":"import _regeneratorRuntime from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _classCallCheck from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/skylarsmith/PermitToWorkEPF/ClientApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Component}from'react';import authService from'./AuthorizeService';import{AuthenticationResultStatus}from'./AuthorizeService';import{LoginActions,QueryParameterNames,ApplicationPaths}from'./ApiAuthorizationConstants';// The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\nexport var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);function Login(props){var _this;_classCallCheck(this,Login);_this=_possibleConstructorReturn(this,_getPrototypeOf(Login).call(this,props));_this.state={message:undefined};return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){var action=this.props.action;switch(action){case LoginActions.Login:this.login(this.getReturnUrl());break;case LoginActions.LoginCallback:this.processLoginCallback();break;case LoginActions.LoginFailed:var params=new URLSearchParams(window.location.search);var error=params.get(QueryParameterNames.Message);this.setState({message:error});break;case LoginActions.Profile:this.redirectToProfile();break;case LoginActions.Register:this.redirectToRegister();break;default:throw new Error(\"Invalid action '\".concat(action,\"'\"));}}},{key:\"render\",value:function render(){var action=this.props.action;var message=this.state.message;if(!!message){return React.createElement(\"div\",null,message);}else{switch(action){case LoginActions.Login:return React.createElement(\"div\",null,\"Processing login\");case LoginActions.LoginCallback:return React.createElement(\"div\",null,\"Processing login callback\");case LoginActions.Profile:case LoginActions.Register:return React.createElement(\"div\",null);default:throw new Error(\"Invalid action '\".concat(action,\"'\"));}}}},{key:\"login\",value:function login(returnUrl){var state,result;return _regeneratorRuntime.async(function login$(_context){while(1){switch(_context.prev=_context.next){case 0:state={returnUrl:returnUrl};_context.next=3;return _regeneratorRuntime.awrap(authService.signIn(state));case 3:result=_context.sent;_context.t0=result.status;_context.next=_context.t0===AuthenticationResultStatus.Redirect?7:_context.t0===AuthenticationResultStatus.Success?8:_context.t0===AuthenticationResultStatus.Fail?11:13;break;case 7:return _context.abrupt(\"break\",14);case 8:_context.next=10;return _regeneratorRuntime.awrap(this.navigateToReturnUrl(returnUrl));case 10:return _context.abrupt(\"break\",14);case 11:this.setState({message:result.message});return _context.abrupt(\"break\",14);case 13:throw new Error(\"Invalid status result \".concat(result.status,\".\"));case 14:case\"end\":return _context.stop();}}},null,this);}},{key:\"processLoginCallback\",value:function processLoginCallback(){var url,result;return _regeneratorRuntime.async(function processLoginCallback$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:url=window.location.href;_context2.next=3;return _regeneratorRuntime.awrap(authService.completeSignIn(url));case 3:result=_context2.sent;_context2.t0=result.status;_context2.next=_context2.t0===AuthenticationResultStatus.Redirect?7:_context2.t0===AuthenticationResultStatus.Success?8:_context2.t0===AuthenticationResultStatus.Fail?11:13;break;case 7:throw new Error('Should not redirect.');case 8:_context2.next=10;return _regeneratorRuntime.awrap(this.navigateToReturnUrl(this.getReturnUrl(result.state)));case 10:return _context2.abrupt(\"break\",14);case 11:this.setState({message:result.message});return _context2.abrupt(\"break\",14);case 13:throw new Error(\"Invalid authentication result status '\".concat(result.status,\"'.\"));case 14:case\"end\":return _context2.stop();}}},null,this);}},{key:\"getReturnUrl\",value:function getReturnUrl(state){var params=new URLSearchParams(window.location.search);var fromQuery=params.get(QueryParameterNames.ReturnUrl);if(fromQuery&&!fromQuery.startsWith(\"\".concat(window.location.origin,\"/\"))){// This is an extra check to prevent open redirects.\nthrow new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\");}return state&&state.returnUrl||fromQuery||\"\".concat(window.location.origin,\"/\");}},{key:\"redirectToRegister\",value:function redirectToRegister(){this.redirectToApiAuthorizationPath(\"\".concat(ApplicationPaths.IdentityRegisterPath,\"?\").concat(QueryParameterNames.ReturnUrl,\"=\").concat(encodeURI(ApplicationPaths.Login)));}},{key:\"redirectToProfile\",value:function redirectToProfile(){this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);}},{key:\"redirectToApiAuthorizationPath\",value:function redirectToApiAuthorizationPath(apiAuthorizationPath){var redirectUrl=\"\".concat(window.location.origin).concat(apiAuthorizationPath);// It's important that we do a replace here so that when the user hits the back arrow on the\n// browser he gets sent back to where it was on the app instead of to an endpoint on this\n// component.\nwindow.location.replace(redirectUrl);}},{key:\"navigateToReturnUrl\",value:function navigateToReturnUrl(returnUrl){// It's important that we do a replace here so that we remove the callback uri with the\n// fragment containing the tokens from the browser history.\nwindow.location.replace(returnUrl);}}]);return Login;}(Component);","map":{"version":3,"sources":["/Users/skylarsmith/PermitToWorkEPF/ClientApp/src/components/api-authorization/Login.js"],"names":["React","Component","authService","AuthenticationResultStatus","LoginActions","QueryParameterNames","ApplicationPaths","Login","props","state","message","undefined","action","login","getReturnUrl","LoginCallback","processLoginCallback","LoginFailed","params","URLSearchParams","window","location","search","error","get","Message","setState","Profile","redirectToProfile","Register","redirectToRegister","Error","returnUrl","signIn","result","status","Redirect","Success","Fail","navigateToReturnUrl","url","href","completeSignIn","fromQuery","ReturnUrl","startsWith","origin","redirectToApiAuthorizationPath","IdentityRegisterPath","encodeURI","IdentityManagePath","apiAuthorizationPath","redirectUrl","replace"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Component } from 'react';\nimport authService from './AuthorizeService';\nimport { AuthenticationResultStatus } from './AuthorizeService';\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from './ApiAuthorizationConstants';\n\n// The main responsibility of this component is to handle the user's login process.\n// This is the starting point for the login process. Any component that needs to authenticate\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\n// let the component perform the login and return back to the return url.\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            message: undefined\n        };\n    }\n\n    componentDidMount() {\n        const action = this.props.action;\n        switch (action) {\n            case LoginActions.Login:\n                this.login(this.getReturnUrl());\n                break;\n            case LoginActions.LoginCallback:\n                this.processLoginCallback();\n                break;\n            case LoginActions.LoginFailed:\n                const params = new URLSearchParams(window.location.search);\n                const error = params.get(QueryParameterNames.Message);\n                this.setState({ message: error });\n                break;\n            case LoginActions.Profile:\n                this.redirectToProfile();\n                break;\n            case LoginActions.Register:\n                this.redirectToRegister();\n                break;\n            default:\n                throw new Error(`Invalid action '${action}'`);\n        }\n    }\n\n    render() {\n        const action = this.props.action;\n        const { message } = this.state;\n\n        if (!!message) {\n            return <div>{message}</div>\n        } else {\n            switch (action) {\n                case LoginActions.Login:\n                    return (<div>Processing login</div>);\n                case LoginActions.LoginCallback:\n                    return (<div>Processing login callback</div>);\n                case LoginActions.Profile:\n                case LoginActions.Register:\n                    return (<div></div>);\n                default:\n                    throw new Error(`Invalid action '${action}'`);\n            }\n        }\n    }\n\n    async login(returnUrl) {\n        const state = { returnUrl };\n        const result = await authService.signIn(state);\n        switch (result.status) {\n            case AuthenticationResultStatus.Redirect:\n                break;\n            case AuthenticationResultStatus.Success:\n                await this.navigateToReturnUrl(returnUrl);\n                break;\n            case AuthenticationResultStatus.Fail:\n                this.setState({ message: result.message });\n                break;\n            default:\n                throw new Error(`Invalid status result ${result.status}.`);\n        }\n    }\n\n    async processLoginCallback() {\n        const url = window.location.href;\n        const result = await authService.completeSignIn(url);\n        switch (result.status) {\n            case AuthenticationResultStatus.Redirect:\n                // There should not be any redirects as the only time completeSignIn finishes\n                // is when we are doing a redirect sign in flow.\n                throw new Error('Should not redirect.');\n            case AuthenticationResultStatus.Success:\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\n                break;\n            case AuthenticationResultStatus.Fail:\n                this.setState({ message: result.message });\n                break;\n            default:\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\n        }\n    }\n\n    getReturnUrl(state) {\n        const params = new URLSearchParams(window.location.search);\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\n            // This is an extra check to prevent open redirects.\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\n        }\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\n    }\n\n    redirectToRegister() {\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\n    }\n\n    redirectToProfile() {\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\n    }\n\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\n        // It's important that we do a replace here so that when the user hits the back arrow on the\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\n        // component.\n        window.location.replace(redirectUrl);\n    }\n\n    navigateToReturnUrl(returnUrl) {\n        // It's important that we do a replace here so that we remove the callback uri with the\n        // fragment containing the tokens from the browser history.\n        window.location.replace(returnUrl);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}