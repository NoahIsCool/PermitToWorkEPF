{"ast":null,"code":"var _jsxFileName = \"/Users/skylarsmith/PermitToWorkEPF/ClientApp/src/components/ReactCalendar.js\";\nimport React, { Component } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nconst localizer = momentLocalizer(moment);\nconst DnDCalendar = withDragAndDrop(Calendar);\nexport class ReactCalendar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: [{\n        start: new Date(),\n        end: new Date(moment().add(1, \"days\")),\n        title: \"Some title\"\n      }]\n    };\n\n    this.onEventResize = (type, {\n      event,\n      start,\n      end,\n      allDay\n    }) => {\n      this.setState(state => {\n        state.events[0].start = start;\n        state.events[0].end = end;\n        return {\n          events: state.events\n        };\n      });\n    };\n\n    this.onEventDrop = ({\n      event,\n      start,\n      end,\n      allDay\n    }) => {\n      console.log(start);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(DnDCalendar, {\n      defaultDate: new Date(),\n      defaultView: \"month\",\n      events: this.state.events,\n      localizer: localizer,\n      onEventDrop: this.onEventDrop,\n      onEventResize: this.onEventResize,\n      resizable: true,\n      style: {\n        height: \"100vh\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/skylarsmith/PermitToWorkEPF/ClientApp/src/components/ReactCalendar.js"],"names":["React","Component","Calendar","momentLocalizer","moment","withDragAndDrop","localizer","DnDCalendar","ReactCalendar","state","events","start","Date","end","add","title","onEventResize","type","event","allDay","setState","onEventDrop","console","log","render","height"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,oBAA1C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,eAAP,MAA4B,2CAA5B;AAEA,OAAO,sDAAP;AACA,OAAO,mDAAP;AAEA,MAAMC,SAAS,GAAGH,eAAe,CAACC,MAAD,CAAjC;AACA,MAAMG,WAAW,GAAGF,eAAe,CAACH,QAAD,CAAnC;AAEA,OAAO,MAAMM,aAAN,SAA4BP,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACzCQ,KADyC,GACjC;AACJC,MAAAA,MAAM,EAAE,CACJ;AACIC,QAAAA,KAAK,EAAE,IAAIC,IAAJ,EADX;AAEIC,QAAAA,GAAG,EAAE,IAAID,IAAJ,CAASR,MAAM,GAAGU,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAAT,CAFT;AAGIC,QAAAA,KAAK,EAAE;AAHX,OADI;AADJ,KADiC;;AAAA,SAWzCC,aAXyC,GAWzB,CAACC,IAAD,EAAO;AAAEC,MAAAA,KAAF;AAASP,MAAAA,KAAT;AAAgBE,MAAAA,GAAhB;AAAqBM,MAAAA;AAArB,KAAP,KAAyC;AACrD,WAAKC,QAAL,CAAcX,KAAK,IAAI;AACnBA,QAAAA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBC,KAAhB,GAAwBA,KAAxB;AACAF,QAAAA,KAAK,CAACC,MAAN,CAAa,CAAb,EAAgBG,GAAhB,GAAsBA,GAAtB;AACA,eAAO;AAAEH,UAAAA,MAAM,EAAED,KAAK,CAACC;AAAhB,SAAP;AACH,OAJD;AAKH,KAjBwC;;AAAA,SAmBzCW,WAnByC,GAmB3B,CAAC;AAAEH,MAAAA,KAAF;AAASP,MAAAA,KAAT;AAAgBE,MAAAA,GAAhB;AAAqBM,MAAAA;AAArB,KAAD,KAAmC;AAC7CG,MAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACH,KArBwC;AAAA;;AAuBzCa,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AACI,MAAA,WAAW,EAAE,IAAIZ,IAAJ,EADjB;AAEI,MAAA,WAAW,EAAC,OAFhB;AAGI,MAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,MAHvB;AAII,MAAA,SAAS,EAAEJ,SAJf;AAKI,MAAA,WAAW,EAAE,KAAKe,WALtB;AAMI,MAAA,aAAa,EAAE,KAAKL,aANxB;AAOI,MAAA,SAAS,MAPb;AAQI,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAcH;;AAtCwC","sourcesContent":["import React, { Component } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\n\nimport \"react-big-calendar/lib/addons/dragAndDrop/styles.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst localizer = momentLocalizer(moment)\nconst DnDCalendar = withDragAndDrop(Calendar);\n\nexport class ReactCalendar extends Component {\n    state = {\n        events: [\n            {\n                start: new Date(),\n                end: new Date(moment().add(1, \"days\")),\n                title: \"Some title\"\n            }\n        ]\n    };\n\n    onEventResize = (type, { event, start, end, allDay }) => {\n        this.setState(state => {\n            state.events[0].start = start;\n            state.events[0].end = end;\n            return { events: state.events };\n        });\n    };\n\n    onEventDrop = ({ event, start, end, allDay }) => {\n        console.log(start);\n    };\n\n    render () {\n        return (\n            <div>\n                <DnDCalendar\n                    defaultDate={new Date()}\n                    defaultView=\"month\"\n                    events={this.state.events}\n                    localizer={localizer}\n                    onEventDrop={this.onEventDrop}\n                    onEventResize={this.onEventResize}\n                    resizable\n                    style={{ height: \"100vh\" }}\n                />\n            </div>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}